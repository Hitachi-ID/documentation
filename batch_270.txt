Argument Description
-state <state> The state of the item (see list of available states below).
-target <target ID> Bravura Security Fabric  target system the item belongs
to. The <target ID> must be entered in upper case; for
example, -target RSAAM.
-f <t e xtfile> Uses a file listing  inventory items to be acted upon. See
Adding multiple  items.
-listfile  <t e xtfile> Uses a list file from an inventory type target system for
items assigned to users or from a listing  file generated by
listunassigned for unassigned items. See Adding multiple
items.
Adding a single item
To add a single item, the item’s ID, type, and loc ation  are required. For example:
manageinv -add -id 0000000111 -type TOKEN -loc NY
Optional  arguments include:
   [-state <state> | -desc <description> | -notes ‘‘<notes>'' | -user
   <user> |  -target <target>]
Adding multiple  items
To add multiple  items, either the -f or -listfile  options  may be specified.   Specifying the -f option:   
When using -f, only this option  is required. For example:
manageinv -add -f items.txt
The text file must be in the format:
   itemid type location state description notes user target
Where <state> can be any of:
▪N - Available▪
▪V - In stock▪
▪R - Reserved▪
▪U - Undelivered▪
▪A - Assigned▪
▪O - Outstanding▪
▪P - Approved purchase▪
▪o - Ordered▪
▪D - Permanently damaged▪
▪L - Lost/Stolen▪
▪r - In repair▪▪d - Disposed▪
▪T - In transit to user▪
▪C - Received by user▪
Use "" for any blank fields.  For example, the following text file row adds an unassigned item:
00000000111 TOKEN CALGARY A "rsa token" "Notes for Calgary token" "" TOKEN1
If you specify any of the values for -type, -loc ation,  -user, -notes, or -target, those values can be
skipped in the text file. For example, if you use the options:
-add  -type TOKEN  -notes "" -f items.txt
then the text file would be in the format:
itemid location user target
Specifying the -listfile  option:   
When using the -listfile  option,  the -target, -type, and -loc options  are also required.
The -listfile  option  uses the <target>.db listing  file from an inventory type target system to add items
that are assigned to users (such as for RSA Authentic ation  Manager 7.1/8.2 or for Vasco IDENTIKEY
Server).
For example:
After  setting  up an RSA Authentic ation  Manager 7.1/8.2 target system, run auto discovery. Use the
r esulting  list file to populate the Inventory items list with the assigned tokens:
manageinv -add -target RSAAM -type TOKEN -loc NY -state A -
listfile ..\psconfig\RSAAM.db
The listing  file for unassigned items may also be used to add items from a listing  file generated by
listunassigned  (on page 3611).
For example:
To populate the Inventory items list with unassigned tokens from the target system:
Use the listunassigned program to get a list:
listunassigned.exe -targetid RSAAM
This writes a list of available tokens to a file, RSAAM-unassigned.db in the \<ins t ance>\p sc on fig\
directory.
Populate the Inventory items list:
manageinv -add -target RSAAM -type TOKEN -loc NY -state N -
listfile ..\psconfig\RSAAM-unassigned.db
Removing a single itemTo remove a single item, -id and -type are required. For example:
manageinv   -rm -id 00000000111 -type TOKEN
Removing multiple  items using criteria
You can use any c ombination  of -type, -loc ation,  -user, or -target to remove all items with those
values. For example:
manageinv -rm -type TOKEN -loc NY
The list files may also be used to remove items found in those files.  For example:
manageinv -rm -target RSAAM -type TOKEN -loc NY -listfile ..\psconfig
\RSAAM.db
manageinv -rm -target RSAAM -type TOKEN -loc NY -listfile ..\psconfig
\RSAAM-unassigned.db
Removing multiple  items using a file
To remove multiple  items, only the -f option  is required. For example:
manageinv -rm -f items.txt
The text file must be in the format:
itemid type
Updating  an item
To update an item in the INVOBJ table, use the -add argument to specify new in f ormation  about the
item.
to manage items in any state.
.
An item must be In stock or Outstanding to move to Lost/Stolen or Permanently damaged.
4.Change other fields  as required. 4.
5.Click Update . 5.
Bravura Security Fabric  notifies  appropriate users.
Unassigning inventory
To unassign an item from  Bravura Identity  user:
1.As a product administrator click Manage the system > Inventory > Template items . 1.
Or, as an inventory manager, click Inventory management .
2.Search for, or select, an item.2.
3.Click Unassign . If required, c on firm  your actions  (on page 360). 3.4.Click Update at the bottom  of the form. 4.
You can only unassign items from user profiles  that are managed by Bravura Identity .Inventory managers
Inventory managers can manage inventory items by loc ation  and type.
Using the Manage inventory  (IDV) module, an assigned inventory manager can:
▪Add inventory items to the Bravura Security Fabric database. ▪
▪Change the state of an item.▪
▪Change the loc ation  of an item if they are responsible for the same item types in diff er en t  loc ations. ▪
▪Unassign items.▪
Before you start you must de fine  at least one inventory loc ation  and item type  (on page 2667).
To assign a user as an inventory manager:
1.Click Manage the system > Inventory > Inventory managers . 1.
2.Click Add new... . 2.
Bravura Security Fabric  displays a form for you to enter inventory manager in f ormation.
3.Select the inventory item Type and Loc ation  for which you want to assign a manager. 3.
4.Type the pr ofile  ID in the Inventory manager field,  or search to select the user that you want to de fine 4.
as an inventory manager.
5.Click Add. 5.
You can assign the same user as inventory manager for diff er en t  loc ations  or item types.Inventory Management Options
This chapter shows you how to control processes and set plugins and options  for inventory management
in Bravura Identity .
All plugins are located in <instance>\plugin\. Only the executable name is required in appropriate fields.
Checking inventory levels
You can c on figur e  the checkstock  plugin program to run a nightly check on the number of inventory
items available for provisioning. Inventory items are associated with templates  (on page 2668) and
de fined  by item type and loc ation.  If inventory associated with a particular  template falls below a certain
level, Bravura Identity  notifies  the responsible inventory managers. If no inventory managers are set up,
Bravura Identity  emails the default administrator c on figur ed  by the RECIPIENT EMAIL setting  (on page
420).
Set the CHECK INVENTORY PLUGIN option  (Inventory > Options ) to use checkstock.exe .
This program uses a simple c on figur ation  file to de fine  the threshold for each template. The
checkstock.cfg file is written  in the format:
<templateID > <threshold >
For example:
id_ny 100
pda_inv 50
phone_ext 20
This means the inventory manager responsible for items associated with template id_ny is notified
when stocks fall below 100.
Managing inventory lists on an external source
Bravura Identity  maintains a list of inventory items in its database. You can also write a plugin to maintain
the list on an external source.
To use an external inventory plugin:
1.Click Manage the system > Inventory > Options  . 1.
2.Type the name of the plugin in the EXT INVENTORY PLUGIN field. 2.
3.Click Update at the bottom  of the page. 3.
There is no shipped plugin in use with this plugin point. A sample, testinv.exe , is included in the
dis tribution  debug directory. This sample plugin uses an input file, testinv.txt , which is also in the
debug directory. See more in f ormation  on writing  a custom plugin
RequirementsIt is recommended that the plugin be written  in PSLang, which has functions  to aut omatic ally  deal with
the input and output protocol (KVGroups). The plugin must be placed in the \<instance>\plugin\
directory. See W riting  plugins  for general requirements.
Ex ecution  points
This plugin is run by the Manage the system (PSA) module, Help users (IDA) module, and View and
update pr ofile  (IDR) module, and by the idwfm service.
Input
The plugin receives in f ormation  from a change request or query.
The plugin performs the action  specified  by the input KVGroup. For example:
▪Count all available tokens in Calgary:▪
   "request" "" = { 
     "action" = "count" 
     "expr" "AND" = { 
       "LOCATION" = "CALGARY" 
       "STATE" = "N" 
       "TYPE" = "TOKEN" 
       "USER" = "" 
     } 
   }
▪Read all inventory items:▪
   "request" "" = { 
     "action" = "read" 
     "expr" "AND" = { 
     } 
   }
▪Read details for a specific  inventory item: ▪
   "request" "" = { 
     "action" = "read" 
     "expr" "AND" = { 
       "ID" = "A00001" 
       "TYPE" = "TOKEN" 
     } 
   }
▪Update an inventory item:▪
   "request" "" = { 
     "action" = "update" 
     "attributes" = "" = {        "BATCHID" = "20050823-131544-00" 
       "DESC"  = "some description" 
       "HOSTID" = "ACE" 
       "ID" = "A00001" 
       "ITEMID" = "4f00000000000000ff" 
       "LOCATION" = "CALGARY" 
       "NOTES" = "some notes" 
       "STATE" = "N" 
       "TYPE" = "TOKEN" 
       "USER" = "ABBEYBR" 
     } 
   }
The "add" and "update" input KVGroup are similar.
The keys are de fined  as follows:
▪ action  Performs one of the following actions  on the inventory item listed in the external source: ▪
▪add Adds the item to list of available items ▪
▪update Updates pr operties  associated with the item ▪
▪delete Removes the item from the list of available items ▪
▪read Finds and displays in f ormation  about all items with matching attribut es ▪
▪count Returns a count of items with matching attribut es ▪
▪expr Contains the expression for searching ▪
Search fields  and their values are indicated by key-value pairs. The group name is one of:
▪AND the search matches on all key-value pairs ▪
▪OR the search matches on any key-value pair ▪
Sub-expressions are formed by multiple,  nested "expr" KVGroups.
▪ attribut es  Pr operties  to add or update on the external source. ▪
▪BATCHID The request batch ID ▪
▪DESC The item description ▪
▪HOSTID The inventory target ID ▪
▪ID The item identifier ▪
▪ITEMID A unique identifier  used internally by Bravura Identity ▪
▪LOCATION Must be a valid loc ation  in Bravura Identity ▪
▪NOTES Text entered in the Notes field ▪
▪STATE The inventory item state ▪
Possible states are:
▪N Available ▪
▪V Unavailable▪
▪R Reserved▪▪U Undelivered ▪
▪A Assigned▪
▪O Outstanding ▪
▪USER The user to whom the item is assigned ▪
Output
If the oper ation  was successful, the plugin returns a result value of success
For an add/update/delete oper ation,  only the result key is used. For example:
"response" "" = {
  "result" = "success"
 }
On failure, an error message is returned:
"response" "" = {
  "result" = "Could not contact database"
}
For a successful count action,  the plugin returns something like:
"response" "" = {
    "count" = "4"
    "result" = "success"
    }
For a failed count action,  the plugin returns an error message:
"response" "" = {
    "count" = ""
    "result" = "No such item"
}
Output for a successful read action  includes a KVGroup for each item found. For example:
"response" "" = {
"result" = "success"
  "object" "" = {
"BATCHID" = ""
    "DESC" = ""
"HOSTID" = "ACE"
    "ID" = "A00011"
    "ITEMID" = ""
    "LOCATION" = "CALGARY"
    "NOTES" = ""
    "STATE" = "U"    "TYPE" = "TOKEN"
    "USER" = "ADAMSBO"
     }
  "object" "" = {
    "BATCHID" = ""
    "DESC" = ""
    "HOSTID" = "NULL"
    "ID" = "A00021"
    "ITEMID" = ""
    "LOCATION" = "LA"
    "NOTES" = ""
    "STATE" = "R"
    "TYPE" = "TOKEN"
    "USER" = "ADAMSBO"
     }
}
Inventory items which do not have a valid type or loc ation  attribut e  are ignored by the plugin.
.
Con figuring  inventory event actions
Inventory-related events can trigger external notific ation  programs.
The following inventory options  can be accessed from Manage the system  > Maintenance > System
variables  or Manage the system > Inventory > Options  :
Inventory events that launch interface programs
Option Description
INVOBJ STATE CHANGE The state of an inventory item
has been changed.
See Event actions  (on page 1524) for more in f ormation.