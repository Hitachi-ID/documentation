Argument Description
Right Keyword Description
View
in f ormation:T empla t e
accountsviewtpl The product administrator can view additional  in f ormation  about template
accounts via embedded links.
View
in f ormation:User
notific ationsvie wntf The product administrator can view additional  in f ormation  about user
notific ations  via embedded links.
View
in f ormation:Certific ation
campaignsviewcert The product administrator can view additional  in f ormation  about certific ation
campaigns via embedded links.
for the list of available keywords.
-delete Remove the user’s product administrator rights.
-disable Disable the user.
-enable Enable the user.
-unlock Unlock the user.
-ipmask <IP/CIDRmask> Specify, in Classless Inter-Domain R outing  (CIDR)
not ation,  the IP addresses from which the user is allowed
to connect to the Bravura Security Fabric  API.
Use this argument if the user has either of the IDAPI
caller or OTP IDAPI caller rights.
For more in f ormation  about CIDR refer to the link below.
-name "<full name>" Set the full name of the product administrator.
If the user is an e xisting  user whose full name is stored in
Bravura Security Fabric , you do not need to type a full
name.
-noexpire Set the password to not expire.
This argument applies only to product administrators
whose passwords are stored in the Bravura Security
Fabric  database.
-nooverwrite Do not set an e xisting  password.
-pass <password> Set the password of the product administrator.
Use this argument if you want the user to authentic a t e
using a password stored in Bravura Security Fabric . AArgument Description
password is only required if the user does not have any
accounts; that is, you are cr eating  a console-only user.
-nopass Prevent the user from authentic ating  remotely.
-type A Grant the user all possible adminis tr ativ e  privileges. This
overrides the -acl argument.
-user <pr ofile  ID> The product administrator’s pr ofile  ID.
Type an e xisting  user’s pr ofile  ID if you want to grant or
modify his or her adminis tr ativ e  privileges or pr ofile
status.
Type the pr ofile  ID of a non-existent user if you want to
create a new Bravura Security Fabric  user, similar to the
superuser, that only performs adminis tr ativ e  tasks
(console-only access). Users created this way are not
mapped to accounts on target systems, and cannot
access any of the self-service modules.
CIDR not ation
See more in f ormation  on CIDR not ation
The purpose of the IP addresses field  is to identif y  specific  external server(s) that are allowed to access
the Bravura Security Fabric  server within the boundaries of the specified  access rights. This is
accomplished by using Classless Inter-Domain R outing  (CIDR) not ation  to de fine  an IP address block. The
address block is represented by an IP address and a pr e fix  size and is written  in slash not ation  <IP>/
<pr e fix>  where:
▪IP is the IPv4 (<0-255>.<0-255>.<0-255>.<0-255>) or IPv6 address (<0000- ff ff>:<0000- ff ff>:<0000- ▪
ff ff>:<0000- ff ff>:<0000- ff ff>:<0000- ff ff>:<0000- ff ff>:<0000- ff ff>)
▪ pr e fix  is the pr e fix  size for the mask and must be an integer within the range 0-32 for IPv4 or 0-128 for ▪
IPv6
The subnet mask determines the size of the address block (the number of IP addresses belonging to the
block), and used in c onjunction  with the IP address, specifies  which particular  IP addresses belong to that
block. Some planning is required. You need to determine whether the entry is going to be used to
represent a single address or a range of c onsecutiv e  addresses.
The size of the address block, or the number of IP addresses that the block contains is
number of entries = 2(32- < subnetmask > )
To determine the IP addresses of the servers that will be granted access to the Bravura Security Fabric
server from the IP address/subnet entry do the following:
1.Turn the IP address into binary not ation;  for example, 1.
▪128.10.12.1 = 10000000.00001010.00001100.00000001▪2.Start at the left hand side of the binary r epr esen t ation  and mark off the number of binary digits 2.
specified  by the subnet mask; for example, using a 30 bit subnet mask, the fir s t 30 digits are marked
off (bolded).
▪10000000.00001010.00001100.000000 01 ▪
Valid or matching IP addresses must be based on these fir s t 30 digits.
3.Calculate the valid addresses by cr eating  all possible permut ations  using the remaining binary digits. 3.
In this case, there are only two unmasked digits, and as a result there are only 2(32 - 30)= 22= 4
possible addresses that match.
▪10000000.00001010.00001100.000000 00 = 128.10.12.0 ▪
▪10000000.00001010.00001100.000000 01 = 128.10.12.1 ▪
▪10000000.00001010.00001100.000000 10 = 128.10.12.2 ▪
▪10000000.00001010.00001100.000000 11 = 128.10.12.3 ▪
To restrict access to a single server use a complete pr e fix  (32 for IPv4 or 128 for IPv6). This means that
the IP address must match exactly.
To restrict access only to processes (servers) that reside on the Bravura Security Fabric  server, use the
local host address with a complete pr e fix  (127.0.0.1/32 or ::1/128 for IPv4 and IPv6 r espectiv ely).
External access will be denied.
.
Examples
1.To re-create the default superuser user, type:1.
adm_set -user superuser -pass greatone -type A -
name "IDM administrator"
2.To grant the Manage reports adminis tr ativ e  privilege to an e xisting  user, type: 2.
adm_set -user SmithBob -acl runreport
3.To create a console-only user that can access the API Service (idapi), type:3.
adm_set -user APIUser1 -pass 5*Epxag1 -acl apicaller -
ipmask 10.0.26.5/32
4.To unlock the default superuser after  too many failed login attemp ts,  type: 4.
adm_set -user superuser -unlock
attrfix edv al
Use the attrfixedval program to obtain and set restricted values of pr ofile  and request attribut es.
Usage
attrfixedval.exe <Action>
where <Action>  is one of:Option Description
add <attrk e y>  <value>[<viewable value>] Add <value>/<viewable value> as a restricted value to attribut e  <attrk e y>.
-delete <attrk e y>  <value> Delete restricted value <value> from attribut e  <attrk e y>.
-deleteall <attrk e y> Delete all restricted values from attribut e  <attrk e y>.
-parentval <parent value> For -add and -delete actions,  specify the value of a parent attribut e.
-list [<attrk e y>] List all restricted attribut e  values for attribut e  <attrk e y>;  if <attrk e y>  is omitted,  then restricted attribut e  values for all attribut es  are listed. The list
is in the form of a KVGroup, with each attribut e  having its own sub-KVGroup containing KVPairs for the value/viewable value pairs, and optionally  a
parent value. See Examples.
-batchadd <attrk e y>  <datasource> Import the value/viewable value pairs from <datasource>, and add them to attribut e  <attrk e y>.
-batchreplace <attrk e y>  <datasource> Import the value/viewable value pairs from <datasource>, and use them to replace e xisting  restricted values
For the batch oper ations,  the <datasource> is in the form:
<file name>;<type=csv|csv|dbdump|flr|kvg>
The format should be one of the following:
▪csv – comma-separated values, with the headers named VALUE , VIEWVALUE , and if the attribut e ▪
has a parent attribut e,  PARENTVALUE; for example:
         VALUE,VIEWVALUE,PARENTVALUE 
         NY,"New York", USA 
         CA,"California", USA
▪dbdump – database dump file, either gzipped or uncompressed, with the fields  VALUE , ▪
VIEWVALUE , PARENTVALUE .
▪ flr – fix ed-leng th  records, each record being 2000 characters long, with the fir s t 1000 character field ▪
for VALUE and the second 1000 character field  for VIEWVALUE ;
▪kvg – single KVGroup containing either: ▪
1.One to three KVPairs; a required pair with a VALUE key, an optional  pair with a VIEWVALUE key, 1.
and an optional  pair with a PARENTVALUE key.
Or
2.One or more KVGroups, where each group is f ormatted  as in 1; for example: 2.
"" "" = { 
   "" "" = { 
      "VALUE" = "F" 
      "VIEWVALUE" = "Full time" 
   } 
   "" "" = { 
      "VALUE" = "P" 
      "VIEWVALUE" = "Part time" 
   } 
}
Or,"" "" = { 
   "" "" = { 
      "VALUE" = "AL" 
      "VIEWVALUE" = "Alberta" 
      "PARENTVALUE" ="CA" 
   } 
   "" "" = { 
      "VALUE" = "QC" 
      "VIEWVALUE" = "Quebec" 
      "PARENTVALUE" ="CA" 
   } 
}
See Accessing fla t - file  databases
Bravura Security Fabric  includes a data access library to access fla t - file  databases, such as CSV. PSLang  can
use this library to batch-load records from plain or gzipped files.
Connection  string
Databases are accessed using an ODBC-style c onnection  string. The string specifies  one of a number of
providers, each of which knows how to talk to a certain kind of data source. Connection  strings look
something like:
filename;type=sometype;attr1=value1;attr2=value2;attr3=value3
The filename only has meaning to the provider, and doesn’t necessarily have to be a file.
The type parameter can currently specify one of the following providers:
▪csv Comma Separated Value. The fir s t record in the file has the field  names. ▪
The CSV provider can use the following parameter:
▪separator The character to use to separate fields  from one another. The separator can be a tab, but ▪
you must insert an actual tab character into the string to use it.
▪ flr – A fix ed-leng th  record file. Records are a specified  number of bytes long. Field off se ts  and lengths ▪
must be specified,  since there are no delimiters. Note that the end of lines are not treated specially;
they are treated as just another byte.
The flr provider can use the following parameters:
▪length – The length of a single record in bytes. This parameter is required. ▪
▪ field  – Specifies  a field,  and looks like NAME,off se t1,off se t2.  This means that a field  named NAME ▪
will be read that starts at off se t1  and ends at off se t2.  This parameter is required and can be
specified  multiple  times  to de fine  more than one field  in the file.
▪trim – Used to aut omatic ally  trim leading, trailing, or leading and trailing spaces from data. ▪
▪kvg – A KVGroup. If the KVGroup contains only sub-KVGroups, then each sub-KVGroup is treated as a ▪
record, with its contents (both KVGroups and KVPairs) treated as fields.  If the KVGroup contains bothsub-KVGroups and KVPairs, or only KVPairs, then the main KVGroup is treated as a single record with
its sub-KVGroups and KVPairs as its fields.
For any object that is treated as a field,  its key name is used as the field  name. For a KVPair that is
treated as a field,  its value is treated as the field  value. For a KVGroup that is treated as a field,  its
contents are treated c ollectiv ely  as the field  value.
For a KVGroup whose sub-KVGroups are treated as records, the sub-KVGroups are scanned to collect
all the unique field  names. When accessing a record that does not include all of the fields,  the fla t - file
library returns empty strings for those fields.
The CSV provider can read in gzipped files as well as plain files.
Connection  string examples
1.The following example opens a csv file named sqldump.csv, and uses tab as the separator instead of 1.
comma. Note that you need to specify the actual tab character. The \t is used here just to illustrate.
sqldump.csv;type=csv;separator=\t
2.The following example open a csv file that include quoted values: 2.
sqldump.csv;type=csv;quotation=\"
3.The following example opens a fix ed-leng th  record file with records 60 bytes long. Two fields  will be 3.
read out – one called ID made up of bytes 0 through 19 inclusive (20 bytes long), and another from
bytes 20 through 34 inclusive (15 bytes long). Spaces are not trimmed.
users.dat;type=flr;length=60;field=ID,0,19;field=NAME,20,34
for more in f ormation  about the c onnection  string used for importing  data.
Examples
1.To import the value/viewable value pairs from the email.csv file and add them to the EMAIL pr ofile 1.
and request attribut e:
attrfixedval -batchadd EMAIL email.csv;type=csv
2.To add a value to the STATE attribut e,  which is related to the COUNTRY parent attribut e: 2.
attrfixedval.exe -add STATE CA California -parentval USA
3.To list values for STATE:3.
attrfixedval.exe -list STATE
This would return something like:
# KVGROUP-V1.0 
"STATE" "" = { 
  "AB" "Alberta" = { 
    "parent" = "CANADA" 
  } 
  "CA" "California" = { 
    "parent" = "US" 
  }   "NSW" "New South Wales" = { 
    "parent" = "AUSTRALIA" 
  } 
  "NY" "New York" = { 
    "parent" = "USA" 
  } 
  "QC" "Quebec" = { 
    "parent" = "CANADA" 
  } 
  "QLD" "Queensland" = { 
    "parent" = "AUSTRALIA" 
  } 
  "TX" "Texas" = { 
    "parent" = "USA" 
  } 
} .
ipunlock
Use the ipunlock  program to immediately unlock IP addresses that have been locked out by MAX IP
FAILURE as a result of too many failed authentic ation  attemp ts  using the same IP .
Usage
ipunlock.exe [(-U|--unlock) <IPv4 address>] | [-L|--list]
Argument Description
-U <IPv4 address> | --unlock <IPv4 address> Unlock the specified  IPv4 address
-L | --list Display a list of locked IP addresses
Examples
1.To unlock an IP address that has been locked out by generic login failure, type:1.
ipunlock.exe -U <IPv4 address>
Or,
ipunlock.exe --unlock <IPv4 address>
2.To list IP addresses that have been locked out by generic login failure, type:2.
ipunlock.exe -L
Or,
ipunlock.exe --listiddriver
The iddriver  program reads a file, usually generated by idtrack  (on page 2431) , that describes
changes to make on target systems. The iddriver  program then sends these changes to the idtm
and idwfm services.
See Making changes with iddriver  (on page 2436) for details.
idtrack
The idtrack  program is part of Bravura Security Fabric ’s automated user adminis tr ation  system that
tracks changes to users, user attribut es,  and user group memberships on target systems and propagates
those changes to other target systems.
See Pr opag ating  changes with idtrack  (on page 2431) to learn how to c on figur e  and use idtrack .
userrole
Use the userrole  program to add or remove users from a role.
Usage
 userrole.exe -operation <ADD|DELETE> -optional -roleid <roleid> -
userid <userid>
 userrole.exe -csv <csv>
 userrole.exe -kvg <kvg>
Argument Description
-csv <csv> The CSV file containing the user/role in f ormation.
-kvg <kvg> The KVGROUP file containing the user/role in f ormation.
-oper ation  <ADD—DELETE—LIST> The oper ation;  ADD for adding role membership for the
user, DELETE for removing role membership for the user,
and LIST for listing  the roles the user has.
-optional Adds optional  members in the role if specified.
-roleid <roleid> The role ID to be managed for the user.
-userid <userid> The user ID to be managed for the role.
Examples
1.To add user AUSER001 to the CORPROLE role:1.
 userrole -userid AUSER001 -roleid CORPROLE -operation ADD
2.To add user AUSER001 to the CORPROLE role, along with optional  sub-roles: 2.
  userrole -userid AUSER001 -roleid CORPROLE -operation ADD -optional
3.To remove user AUSER001 from the CORPROLE role:3.
  userrole -userid AUSER001 -roleid CORPROLE -operation DELETEThe -kvg option  uses a KVGroup file containing the subgroup of user and role to be added. The file should
be in the following format:
 "" "" = {
     "user" "<profile id>" = {
         "roleid" = "<role id>" # role id as part of the change
         "operation" = "<ADD|
DELETE>" # operation to perform with the role
         "optional" = "1" # optional; if present, the optional sub-
roles are included
     }
     ...
 }
The -csv option  uses a csv file should be in the following format:
  <userid>,<roleid>,<operation>[,<optional>]
where <optional>  is 1 or 0 if present. A value of 1 means that sub-roles are included.
userstatus
Use the userstatus  program to enable and disable user pr ofiles,  or to check user pr ofile  status from
the command line. Disabling a user’s pr ofile  revokes their access to Bravura Security Fabric  and any
privileged access requests.
Usage
userstatus.exe -user <userid> [-isregexp] | -lst <listfile> [-check | -
enable | -disable]
If you only specify the -user argument, then by default userstatus tries to enable the specified  user.
Argument Description
-user <userid> Specifies  an individual user pr ofile.
-lst <listfile> Specifies  a list of users instead of using the -user
argument to specify an individual user.
-check Displays the pr ofile  status of the specified  user. To check
all users, do not use the -user argument, or type -check -
all.
-enable Enables the pr ofile  of the specified  user. This argument is
applied by default if the -user argument is specified  on its
own.
-disable Disables the pr ofile  of the specified  user, aut omatic ally
checks in the user’s password access and cancels access
requests if applicable.Argument Description
-isregexp Used in c onjunction  with the -user argument, a regular
expression can be written  in the <userid> variable to
match user IDs.
Examples
1.To check all disabled users:1.
userstatus.exe -check
Or,
userstatus.exe -check -all
2.To check an individual disabled user:2.
userstatus.exe -check -user <userid>
3.To disable an individual user:3.
userstatus.exe -user <userid> -disable
4.To disable a group of users:4.
userstatus.exe -lst <listfile>
Or,
userstatus.exe -user <user*> -isregexp
5.To enable all users whose user ID contains "qa":5.
userstatus.exe -user qa* -isregexp -enable
userunlock
Use the userunlock  program to unlock the pr ofiles  of users that have locked themselves out of
Bravura Security Fabric .
Usage
userunlock.exe -all | -user <userid> [-check] [-time <N>]
Argument Description
-user <userid> Unlocks the specified  user pr ofile  only.
-all Unlocks all locked user pr ofiles.
-check Displays a list of locked user pr ofiles.
-time  <N> Specifies  the number of minutes required to pass before
a user pr ofile  can be unlocked.
Examples
1.To list all users who have been locked out for at least 10 minutes:1.
userunlock.exe -check -time 10